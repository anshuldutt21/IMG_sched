{"ast":null,"code":"import _objectSpread from \"/home/anshul/Documents/IMG_sched/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anshul/Documents/IMG_sched/frontend/src/components/Register.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Message, Select } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport './../css/Login.css';\nimport GoogleLogin from 'react-google-login';\n\nclass SignupForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      is_staff: false\n    };\n\n    this.handle_change = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevstate => {\n        const newState = _objectSpread({}, prevstate);\n\n        newState[name] = value;\n        return newState;\n      });\n    };\n\n    this.toggle_change = e => {\n      this.setState({\n        is_staff: !this.state.is_staff\n      });\n    };\n  }\n\n  render() {\n    const responseGoogle = response => {\n      // console.log(response.profileObj.name);\n      fetch('https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=' + response.tokenId, {\n        method: 'GET'\n      }).then(response => response.json()).then(json => {\n        console.log(response.accessToken);\n        console.log(response);\n\n        if (json.email_verified) {// window.localStorage.setItem('token',response.accessToken);\n        }\n      });\n      var y = response.profileObj.givenName;\n      var x = response.googleId;\n      let data1 = {\n        \"username\": \"bhjkjn\",\n        \"password\": \"\",\n        \"is_staff\": false\n      };\n      data1['username'] = y;\n      data1['password'] = x;\n      console.log(data1);\n      fetch('http://127.0.0.1:8000/schedule/userlist/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data1)\n      }).then(res => res.json()).then(json => {\n        window.localStorage.setItem('token', json.token);\n        window.location.reload();\n        this.setState({\n          logged_in: true,\n          username: response.profileObj.name\n        });\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.props.handle_signup(e, this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"UserName\",\n      className: \"input\",\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"is_staff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"R U ADMIN ? \"), React.createElement(\"input\", {\n      className: \"input\",\n      type: \"checkbox\",\n      name: \"is_staff\",\n      value: this.state.is_staff,\n      onChange: this.toggle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input\",\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"teal\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"SUBMIT \"))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" OR \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(GoogleLogin, {\n      clientId: \"915718732611-k5t8orhtst2sjojldkmfkbi8khtptsob.apps.googleusercontent.com\",\n      buttonText: \"SIGN UP  WITH GOOGLE\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SignupForm;\nSignupForm.propTypes = {\n  handle_signup: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/anshul/Documents/IMG_sched/frontend/src/components/Register.js"],"names":["React","Component","Button","Form","Message","Select","PropTypes","GoogleLogin","SignupForm","state","username","password","is_staff","handle_change","e","name","target","value","setState","prevstate","newState","toggle_change","render","responseGoogle","response","fetch","tokenId","method","then","json","console","log","accessToken","email_verified","y","profileObj","givenName","x","googleId","data1","headers","body","JSON","stringify","res","window","localStorage","setItem","token","location","reload","logged_in","props","handle_signup","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,MAAhC,QAA6C,mBAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAGA,MAAMC,UAAN,SAAyBR,KAAK,CAACC,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCQ,KADuC,GAC/B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD+B;;AAAA,SAOvCC,aAPuC,GAOvBC,CAAC,IAAI;AACnB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,YAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,cAAMC,QAAQ,qBAAQD,SAAR,CAAd;;AACAC,QAAAA,QAAQ,CAACL,IAAD,CAAR,GAAiBE,KAAjB;AACA,eAAOG,QAAP;AACD,OAJD;AAKD,KAfsC;;AAAA,SAgBvCC,aAhBuC,GAgBvBP,CAAC,IAAI;AACnB,WAAKI,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADV,OAAd;AAGD,KApBsC;AAAA;;AAwBvCU,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC;AACAC,MAAAA,KAAK,CAAC,6DAA2DD,QAAQ,CAACE,OAArE,EAA8E;AACjFC,QAAAA,MAAM,EAAC;AAD0E,OAA9E,CAAL,CAGGC,IAHH,CAGQJ,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EAHpB,EAIDD,IAJC,CAIIC,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACQ,WAArB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;;AACA,YAAGK,IAAI,CAACI,cAAR,EAAuB,CACrB;AACD;AACF,OAVC;AAWF,UAAIC,CAAC,GAACV,QAAQ,CAACW,UAAT,CAAoBC,SAA1B;AACA,UAAIC,CAAC,GAACb,QAAQ,CAACc,QAAf;AACE,UAAIC,KAAK,GAAG;AACd,oBAAa,QADC;AAEd,oBAAY,EAFE;AAGd,oBAAa;AAHC,OAAZ;AAKAA,MAAAA,KAAK,CAAC,UAAD,CAAL,GAAoBL,CAApB;AACAK,MAAAA,KAAK,CAAC,UAAD,CAAL,GAAoBF,CAApB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAd,MAAAA,KAAK,CAAC,0CAAD,EAA6C;AAClDE,QAAAA,MAAM,EAAE,MAD0C;AAElDa,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFyC;AAKlDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf;AAL4C,OAA7C,CAAL,CAOCX,IAPD,CAOMgB,GAAG,IAAIA,GAAG,CAACf,IAAJ,EAPb,EAQCD,IARD,CAQMC,IAAI,IAAI;AACZgB,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqClB,IAAI,CAACmB,KAA1C;AACAH,QAAAA,MAAM,CAACI,QAAP,CAAgBC,MAAhB;AACF,aAAKhC,QAAL,CAAc;AACZiC,UAAAA,SAAS,EAAE,IADC;AAEZzC,UAAAA,QAAQ,EAAEc,QAAQ,CAACW,UAAT,CAAoBpB;AAFlB,SAAd;AAIF,OAfE;AAgBH,KAvCC;;AAyCA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,QAAQ,EAAED,CAAC,IAAI,KAAKsC,KAAL,CAAWC,aAAX,CAAyBvC,CAAzB,EAA4B,KAAKL,KAAjC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACA,MAAA,WAAW,EAAC,UADZ;AAEA,MAAA,SAAS,EAAC,OAFV;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC,QALpB;AAME,MAAA,QAAQ,EAAE,KAAKG,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EASA;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATA,EAUA;AACA,MAAA,SAAS,EAAC,OADV;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,QAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKS,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,EAiBA;AACA,MAAA,SAAS,EAAC,OADV;AAEA,MAAA,WAAW,EAAC,UAFZ;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,QALpB;AAME,MAAA,QAAQ,EAAE,KAAKE,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBA,EAyBA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzBA,CAFF,CADA,EA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BA,EAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCA,EAkCE,oBAAC,WAAD;AACA,MAAA,QAAQ,EAAC,0EADT;AAEA,MAAA,UAAU,EAAC,sBAFX;AAGA,MAAA,SAAS,EAAE,KAAKU,cAHhB;AAIA,MAAA,SAAS,EAAE,KAAKA,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,CADF;AA2CD;;AA7GsC;;AAgHzC,eAAef,UAAf;AAEAA,UAAU,CAAC8C,SAAX,GAAuB;AACrBD,EAAAA,aAAa,EAAE/C,SAAS,CAACiD,IAAV,CAAeC;AADT,CAAvB","sourcesContent":["import React, {Component} from 'react'\nimport { Button, Form, Message, Select} from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport './../css/Login.css';\nimport GoogleLogin from 'react-google-login';\n\n\nclass SignupForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    is_staff: false,\n  };\n\n  handle_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n  toggle_change = e => {\n    this.setState({\n      is_staff: !this.state.is_staff,\n    });\n  }\n\n     \n\n  render() {\n    const responseGoogle = (response) => {\n      // console.log(response.profileObj.name);\n      fetch('https://www.googleapis.com/oauth2/v3/tokeninfo?id_token='+response.tokenId, {\n        method:'GET',\n      })\n        .then(response => response.json())\n    .then(json => {\n      console.log(response.accessToken);\n      console.log(response);\n      if(json.email_verified){\n        // window.localStorage.setItem('token',response.accessToken);\n      }\n    });\n    var y=response.profileObj.givenName;\n    var x=response.googleId;\n      let data1 = {\n    \"username\" : \"bhjkjn\",\n    \"password\": \"\",\n    \"is_staff\" : false\n      };\n      data1['username'] = y;\n      data1['password'] = x;\n      console.log(data1);\n      fetch('http://127.0.0.1:8000/schedule/userlist/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data1)\n    })\n      .then(res => res.json())\n      .then(json => {\n        window.localStorage.setItem('token', json.token);\n        window.location.reload();\n      this.setState({\n        logged_in: true,\n        username: response.profileObj.name,\n      });\n   });\n  }\n  \n    return (\n      <div>\n      <form onSubmit={e => this.props.handle_signup(e, this.state)}>\n        <h4>Sign Up</h4>\n        <div className=\"Login\">\n        <input\n        placeholder=\"UserName\"\n        className=\"input\"\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handle_change}\n        />\n        <label htmlFor=\"is_staff\">R U ADMIN ? </label>\n        <input          \n        className=\"input\"\n          type=\"checkbox\"\n          name=\"is_staff\"\n          value={this.state.is_staff}\n          onChange={this.toggle_change}\n        />\n        <input\n        className=\"input\"\n        placeholder=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handle_change}\n        />\n        <Button color=\"teal\" type=\"submit\">SUBMIT </Button>\n        </div>\n      </form>\n      <h3> OR </h3>\n      <br />\n\n        <GoogleLogin\n        clientId='915718732611-k5t8orhtst2sjojldkmfkbi8khtptsob.apps.googleusercontent.com'\n        buttonText=\"SIGN UP  WITH GOOGLE\"\n        onSuccess={this.responseGoogle}\n        onFailure={this.responseGoogle}\n        />\n        </div>\n    );\n  }\n}\n\nexport default SignupForm;\n\nSignupForm.propTypes = {\n  handle_signup: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}