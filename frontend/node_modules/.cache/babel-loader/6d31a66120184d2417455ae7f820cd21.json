{"ast":null,"code":"var _jsxFileName = \"/home/anshul/Documents/IMG_sched/frontend/src/components/MeetingComment.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'; // import 'semantic-ui-css/semantic.min.css';\n\nimport './../css/Login.css';\nvar path = window.location.pathname;\nvar room = path.substring(path.lastIndexOf('/') + 1);\nvar url = window.location.href;\nvar myParam = window.location.search.split('user=')[1];\nconsole.log(myParam);\nexport const CommentSocket = new WebSocket('ws://' + '127.0.0.1:8000' + '/ws/schedule/' + room + '/');\n\nclass MeetingComment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      isloading: true,\n      errors: null\n    };\n    this.getComment = this.getComment.bind(this);\n    this.submit = this.submit.bind(this);\n    this.getComment();\n\n    CommentSocket.onmessage = function (e) {\n      var data = JSON.parse(e.data);\n      var message = data['message']; // document.querySelector('#comment-log').value += (message + '\\n');\n    };\n  }\n\n  getComment() {\n    fetch('http://127.0.0.1:8000/schedule/comment/' + room, {\n      method: 'GET',\n      headers: {\n        'Authorization': \"JWT \".concat(window.localStorage.getItem('token'))\n      }\n    }).then(response => response.json()).then(response => {\n      console.log(response.json);\n      this.setState({\n        comments: response,\n        isloading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isloading: false\n    }));\n  }\n\n  submit(e) {\n    document.querySelector('#comment-message-input').onkeyup = function (e) {\n      if (e.keyCode === 13) {\n        document.querySelector('#comment-message-submit').click();\n      }\n    };\n\n    var messageInputDom = document.querySelector('#comment-message-input');\n    var message = messageInputDom.value;\n    CommentSocket.send(JSON.stringify({\n      'message': message,\n      'user': myParam\n    }));\n    this.getComment();\n    messageInputDom.value = '';\n  }\n\n  render() {\n    const _this$state = this.state,\n          isloading = _this$state.isloading,\n          comments = _this$state.comments;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      dividing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, !isloading ? comments.map(comment => {\n      const comment_id = comment.comment_id,\n            comment_post = comment.comment_post,\n            comment_user = comment.comment_user,\n            datetime = comment.datetime;\n      return React.createElement(Comment.Group, {\n        size: \"huge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: comment_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Comment.Avatar, {\n        className: \"image\",\n        src: \"https://react.semantic-ui.com/images/avatar/large/christian.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Comment.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Comment.Author, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, comment_user), React.createElement(Comment.Metadata, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, datetime.slice(0, 10) + \"  at   \" + datetime.slice(11, 19))), React.createElement(Comment.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, comment_post), React.createElement(Comment.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Comment.Action, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Reply\"))))));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Loading...\"))), React.createElement(\"div\", {\n      class: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"comment-message-input\",\n      type: \"text\",\n      placeholder: \"Write Your Comment\",\n      size: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"comment-message-submit\",\n      type: \"button\",\n      value: \"Send\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MeetingComment;","map":{"version":3,"sources":["/home/anshul/Documents/IMG_sched/frontend/src/components/MeetingComment.js"],"names":["React","Component","PropTypes","Button","Comment","Form","Header","path","window","location","pathname","room","substring","lastIndexOf","url","href","myParam","search","split","console","log","CommentSocket","WebSocket","MeetingComment","constructor","props","state","comments","isloading","errors","getComment","bind","submit","onmessage","e","data","JSON","parse","message","fetch","method","headers","localStorage","getItem","then","response","json","setState","catch","error","document","querySelector","onkeyup","keyCode","click","messageInputDom","value","send","stringify","render","map","comment","comment_id","comment_post","comment_user","datetime","slice"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\n// import 'semantic-ui-css/semantic.min.css';\nimport './../css/Login.css';\n\n\n\nvar path= window.location.pathname;\nvar room = path.substring(path.lastIndexOf('/') + 1);\nvar url = window.location.href;\nvar myParam = window.location.search.split('user=')[1];\nconsole.log(myParam);\n\nexport const CommentSocket = new WebSocket(\n        'ws://' + '127.0.0.1:8000' +\n        '/ws/schedule/' + room +  '/');\n\nclass MeetingComment extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props); \n    this.state = {\n      comments: [],\n      isloading: true,\n      errors: null,\n    };\n    this.getComment = this.getComment.bind(this);\n    this.submit=this.submit.bind(this);\n    this.getComment();\n    CommentSocket.onmessage = function(e) {\n        var data = JSON.parse(e.data);\n        var message = data['message'];\n        // document.querySelector('#comment-log').value += (message + '\\n');\n    };\n}\n\n getComment() {\n    fetch('http://127.0.0.1:8000/schedule/comment/'+room,{\n    \tmethod:'GET',\n    \theaders: {\n         'Authorization': `JWT ${window.localStorage.getItem('token')}`\n      }\n    })\n   \t.then(response => response.json())\n   \t.then((response) => {\n   \t\tconsole.log(response.json);\n   \t\tthis.setState({\n   \t\t\tcomments: response,\n   \t\t\tisloading: false,\n   \t\t});\n   \t})\n   \t.catch(error => this.setState({ error , isloading: false}));\n   }\n\n\n    \n   submit(e){\n       document.querySelector('#comment-message-input').onkeyup = function(e) {\n        if (e.keyCode === 13) {  \n            document.querySelector('#comment-message-submit').click();\n        }\n        };\n       var messageInputDom = document.querySelector('#comment-message-input');\n        var message = messageInputDom.value; \n        CommentSocket.send(JSON.stringify({\n            'message': message,\n            'user' : myParam\n        }));\n        this.getComment();\n        messageInputDom.value = '';\n    }\n render(){\n\n \t  const { isloading,comments } =this.state;\n \treturn (\n \t\t<div>\n \t\t<br />\n    <Header as='h1' dividing>\n     Comments\n     </Header>\n     <br />\n \t\t<React.Fragment>\n              <div>\n          {!isloading ? (\n            comments.map(comment => {\n              const { comment_id,comment_post,comment_user,datetime } = comment;\n              return (\n              \t<Comment.Group size=\"huge\">\n              \t<Comment>\n                <div key={comment_id}>\n                <Comment.Avatar className=\"image\" src='https://react.semantic-ui.com/images/avatar/large/christian.jpg' />\n                <Comment.Content>\n        <Comment.Author as='a'>{comment_user}</Comment.Author>\n        <Comment.Metadata>\n          <div>{datetime.slice(0,10)+\"  at   \"+datetime.slice(11,19)}</div>\n        </Comment.Metadata>\n        <Comment.Text>{comment_post}</Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Reply</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n                </div>\n                </Comment>\n                </Comment.Group>\n\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n        </React.Fragment>\n        <div class=\"comment\">\n    <input id=\"comment-message-input\" type=\"text\" placeholder=\"Write Your Comment\" size=\"100\"/>\n    <input id=\"comment-message-submit\" type=\"button\" value=\"Send\" onClick={this.submit}/>\n    </div>\n \t\t</div>\n\n \t\t)\n }\n}\n\nexport default MeetingComment;"]},"metadata":{},"sourceType":"module"}